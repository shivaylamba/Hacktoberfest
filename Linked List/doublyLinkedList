#include <iostream>
// node ka structure change hota he doubly linked list me { data , next, aur previous }
using namespace std;


class Node{
public:
   int data;
   Node* next;
    Node* prev;
// constructor
Node(int d)
{
  this->data = d;
  this->prev = NULL;
  this->next = NULL;
}
~Node(){
  int val = this->data;
  if(next!=NULL)
  {
    delete next;
    next = NULL;
  }
}


};

void deleteNode(int pos, Node* head)
{
  if(pos==1)
  {
    Node* temp = head;
    temp->next->prev = NULL;
    head = temp->next;
    temp->next = NULL;
    delete temp;
    
  }

  Node* curr = head ;
  Node* prev = NULL;
  int count  =1;
  while(count<pos){
    prev= curr;
    curr = curr->next;
    count++;
  }
  curr->prev = NULL;
  prev->next = curr->next;
  curr -> next = NULL;
  delete curr;
}

void print(Node* head){
  Node* temp = head;
  while(temp!=NULL)
    {
      cout<<temp->data<<" ";
      temp = temp->next;
    }
  cout<<endl;
}
int getLength(Node* head)
{
  int len = 0;
   Node* temp = head;
  while(temp!=NULL)
    {
      len++;
      temp = temp->next;
    }
  return len;
}

void insertAtHead(Node* &head, int d)
{
  Node* temp = new Node(d);
  temp->next = head;
  head->prev = temp;
  head = temp;
}
void insertAtTail(Node* tail, int d)
{
   Node* temp = new Node(d);
  tail->next = temp;
  temp->prev = tail;
  tail= temp;
  
}

void insertAtPos( Node* &tail, Node* &head, int pos, int d){
  if(pos==1){
    insertAtHead(head, d);
  }
  Node* temp = head;
  int count = 1;
  while(count<pos-1)
    {
      temp = temp->next;
      count++;
    }
  if(temp->next==NULL)
  {
    insertAtTail(tail, d);
  }
  Node* nodeToInsert = new Node(d);
  nodeToInsert->next = temp->next;
  temp->next->prev = nodeToInsert;
  temp->next = nodeToInsert;
  nodeToInsert->prev = temp;
}


int main() {
  std::cout << "Hello World!\n";
  Node* node1 = new Node(10);
  Node* head = node1;
  Node* tail = node1;
  print(head);
  cout<<getLength(head)<<endl;
  insertAtHead(head, 14);
  insertAtTail(tail, 33);
  insertAtPos( tail , head, 2 , 55);
    insertAtPos( tail , head, 1 , 55);
cout<<"Before"<<endl;
  
  print (head);
  deleteNode(3, head);
  cout<<"After"<< endl;
  print(head);
    deleteNode(3, head);
print(head);
  
}
