// 1. Naive Method , Time-Complexity = theta(n^2)
int getWater(int arr[],int n)
{
    int res=0;
    for(int i=1;i<n-1;i++)
    {
        int lmax = arr[i];
        for(int j=0;j<i;j++)
        lmax = max(lmax,arr[j]);
        int rmax = arr[i];
        for(int j=i+1;j<n;j++)
        rmax = max(rmax,arr[j]);
        res = res + (min(lamx,rmax)-arr[i]);
    }
    return res;
}


//2. Efficient Method, Time-Complexity = theta(n) and Auxiliary Space = theta(n)

int getWater(int arr[],int n)
{
    int res =0;
    int lmax[n],rmax=[n];
    lamx[0]=arr[0];
    for(int i=1;i<n;i++)
    lmax[i] = max(arr[i],lamx[i-1]);
    rmax[n-1] = arr[n-1];
    for(int i =n-2;i>=0;i--)
    rmax[i] = max(arr[i],rmax[i+1]);
    for(int i=1;i<n-1;i++)
    res = res + (min(lmax[i],rmax[i])-arr[i]);
    return res;
}
